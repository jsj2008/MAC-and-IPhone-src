# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.74 92/12/02 21:32:49 rws Exp $

# -------------------------------------------------------------------------
# Makefile generated from "Imake.tmpl" and <Imakefile>
# $XConsortium: Imake.tmpl,v 1.160 92/11/18 14:11:25 rws Exp $
#
# Platform-specific parameters may be set in the appropriate <vendor>.cf
# configuration files.  Site-specific parameters should be set in the file
# site.def.  Full rebuilds are recommended if any parameters are changed.
#
# If your C preprocessor does not define any unique symbols, you will need
# to set BOOTSTRAPCFLAGS when rebuilding imake (usually when doing
# "make World" the first time).
#

# -------------------------------------------------------------------------
# site-specific configuration parameters that need to come before
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.def,v 1.2 91/07/30 20:26:44 rws Exp $

# -------------------------------------------------------------------------
# platform-specific configuration parameters - edit sgi.cf to change

# platform:  $XConsortium: sgi.cf,v 1.19 91/07/28 22:39:45 rws Exp $

# operating system:				IRIX

        OPTIMIZER = -O2

           MANUSR = /usr/share/local

       CATMAN1DIR = $(MANUSR)/catman/u_man/cat1
       CATMAN3DIR = $(MANUSR)/catman/p_man/cat3
          MAN1DIR = $(MANUSR)/man/u_man/man1
          MAN3DIR = $(MANUSR)/man/p_man/man3

       MANPACKAGE = /X11

# $XConsortium: sgiLib.rules,v 1.6 92/05/29 17:05:46 rws Exp $

# -------------------------------------------------------------------------
# site-specific configuration parameters that go after
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.def,v 1.2 91/07/30 20:26:44 rws Exp $

            SHELL = 	/bin/sh

              TOP = .
      CURRENT_DIR = .

               AR = ar cq
  BOOTSTRAPCFLAGS = $(OPTIMIZER)
               CC = cc
               AS = as

         COMPRESS = compress
              CPP = /lib/cpp $(STD_CPP_DEFINES)
    PREPROCESSCMD = cc -E $(STD_CPP_DEFINES)
          INSTALL = bsdinst
               LD = ld
              LEX = lex
             YACC = yacc
             LINT = lint
      LINTLIBFLAG = -o
         LINTOPTS = -ax
               LN = ln -s

               MV = mv
               CP = cp

               RM = rm -f
            TROFF = psroff -t
         MSMACROS = -ms
              TBL = tbl
              EQN = eqn
     STD_INCLUDES = -nostdinc -I$(ROOT)/usr/include
  STD_CPP_DEFINES = -DXML -DSYSV -DSVR4
      STD_DEFINES = -DXML -DSYSV -DSVR4
 EXTRA_LOAD_FLAGS =
  EXTRA_LDOPTIONS = -call_shared
  EXTRA_LIBRARIES = 	-nostdlib -L$(ROOT)/lib -L$(ROOT)$(USRLIBDIR)
             TAGS = ctags

    SHAREDCODEDEF =
         SHLIBDEF =

    PROTO_DEFINES = -DFUNCPROTO=7 -DNARROWPROTO

     INSTPGMFLAGS =

     INSTBINFLAGS = -m 0755
     INSTUIDFLAGS = -m 4755
     INSTLIBFLAGS = -m 0644
     INSTINCFLAGS = -m 0444
     INSTMANFLAGS = -m 0444
     INSTDATFLAGS = -m 0444
    INSTKMEMFLAGS = -m 2755 -g sys

      CDEBUGFLAGS = $(OPTIMIZER)
        CCOPTIONS = -xansi -Wf,-XNh2000

      ALLINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(TOP_INCLUDES) $(STD_INCLUDES)
       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(EXTRA_DEFINES) $(PROTO_DEFINES) $(DEFINES)
           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(ALLDEFINES)
        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES)

           LDLIBS = $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)

        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS) $(EXTRA_LDOPTIONS) $(LOCAL_LDFLAGS)

   LDCOMBINEFLAGS = -r
      DEPENDFLAGS =

        MACROFILE = sgi.cf
           RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut

    IMAKE_DEFINES =

         IRULESRC = $(CONFIGDIR)
        IMAKE_CMD = $(IMAKE) -DUseInstalled -I$(IRULESRC) $(IMAKE_DEFINES)

     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Imake.rules \
			$(IRULESRC)/Project.tmpl $(IRULESRC)/site.def \
			$(IRULESRC)/$(MACROFILE)  \
			$(EXTRA_ICONFIGFILES)

# -------------------------------------------------------------------------
# X Window System Build Parameters
# $XConsortium: Project.tmpl,v 1.152 92/08/10 17:47:45 eswu Exp $

# -------------------------------------------------------------------------
# X Window System make variables; this need to be coordinated with rules

          PATHSEP = /
        USRLIBDIR = /usr/lib
         SHLIBDIR = /usr/lib
           BINDIR = /usr/bin/X11
          INCROOT = /usr/include
     BUILDINCROOT = $(TOP)
      BUILDINCDIR = $(BUILDINCROOT)/X11
      BUILDINCTOP = ..
           INCDIR = $(INCROOT)/X11
           ADMDIR = /usr/adm
           LIBDIR = $(USRLIBDIR)/X11
        CONFIGDIR = $(LIBDIR)/config
       LINTLIBDIR = $(USRLIBDIR)/lint

          FONTDIR = $(LIBDIR)/fonts
         XINITDIR = $(LIBDIR)/xinit
           XDMDIR = 			/var/X11/xdm
           TWMDIR = $(LIBDIR)/twm
          MANPATH = /usr/share/man
    MANSOURCEPATH = $(MANPATH)/man
        MANSUFFIX = 1
     LIBMANSUFFIX = 3
           MANDIR = $(CATMAN1DIR)$(MANPACKAGE)
        LIBMANDIR = $(CATMAN3DIR)$(MANPACKAGE)
           NLSDIR = $(LIBDIR)/nls
        PEXAPIDIR = $(LIBDIR)/PEX
      XAPPLOADDIR = $(LIBDIR)/app-defaults
       FONTCFLAGS = -t

     INSTAPPFLAGS = $(INSTDATFLAGS)

            IMAKE = imake
           DEPEND = makedepend
              RGB = rgb

            FONTC = bdftopcf

        MKFONTDIR = mkfontdir
        MKDIRHIER = 	/bin/sh $(BINDIR)/mkdirhier

        CONFIGSRC = $(TOP)/config
       DOCUTILSRC = $(TOP)/doc/util
        CLIENTSRC = $(TOP)/clients
          DEMOSRC = $(TOP)/demos
           LIBSRC = $(TOP)/lib
          FONTSRC = $(TOP)/fonts
       INCLUDESRC = $(TOP)/X11
        SERVERSRC = $(TOP)/server
          UTILSRC = $(TOP)/util
        SCRIPTSRC = $(UTILSRC)/scripts
       EXAMPLESRC = $(TOP)/examples
       CONTRIBSRC = $(TOP)/../contrib
           DOCSRC = $(TOP)/doc
           RGBSRC = $(TOP)/rgb
        DEPENDSRC = $(UTILSRC)/makedepend
         IMAKESRC = $(CONFIGSRC)
         XAUTHSRC = $(LIBSRC)/Xau
          XLIBSRC = $(LIBSRC)/X
           XMUSRC = $(LIBSRC)/Xmu
       TOOLKITSRC = $(LIBSRC)/Xt
       AWIDGETSRC = $(LIBSRC)/Xaw
       OLDXLIBSRC = $(LIBSRC)/oldX
      XDMCPLIBSRC = $(LIBSRC)/Xdmcp

      BDFTOPCFSRC = $(FONTSRC)/clients/bdftopcf

     MKFONTDIRSRC = $(FONTSRC)/clients/mkfontdir
         FSLIBSRC = $(FONTSRC)/lib/fs
    FONTSERVERSRC = $(FONTSRC)/server
     EXTENSIONSRC = $(TOP)/extensions
         XILIBSRC = $(EXTENSIONSRC)/lib/xinput
      XTESTLIBSRC = $(EXTENSIONSRC)/lib/xtest
        PEXLIBSRC = $(EXTENSIONSRC)/lib/PEXlib
      PHIGSLIBSRC = $(EXTENSIONSRC)/lib/PEX
      XNMBXLIBSRC = $(EXTENSIONSRC)/lib/nmbx

# Supporting dynamic shared object libraries for IRIX 5.0

# These defines mimic what is in /usr/include/make/commondefs
# (Should be in sync with Revision 1.99)

       DSOREGFILE = $$ROOT/usr/lib/so_locations
      DSOSTARTOPT = -update_registry $(DSOREGFILE)
       DSONAMEOPT = -soname $@
       DSOVERSION = sgi1.0
    DSOVERSIONOPT = -set_version $(DSOVERSION)
        LDDSOOPTS = -no_unresolved -shared $(VLDDSOOPTS) $(LLDDSOOPTS) $(GLDDSOOPTS)
       GLDDSOOPTS = -all $(DSOSTARTOPT) $(DSONAMEOPT) $(DSOVERSIONOPT)

      DEPXLIBONLY =  $(USRLIBDIR)/libX11.so$(SOXLIBREV)
          DEPXLIB = $(DEPEXTENSIONLIB) $(DEPXLIBONLY)
         XLIBONLY =  -lX11
             XLIB = $(EXTENSIONLIB) $(XLIBONLY)

      DEPXTOOLLIB =  $(USRLIBDIR)/libXt.so$(SOXTREV)
         XTOOLLIB =  -lXt

        DEPXMULIB =  $(USRLIBDIR)/libXmu.so$(SOXMUREV)
       XMULIBONLY =  -lXmu
           XMULIB = $(XMULIBONLY)

        DEPXAWLIB =  $(USRLIBDIR)/libXaw.so$(SOXAWREV)
           XAWLIB =  -lXaw

  DEPEXTENSIONLIB =  $(USRLIBDIR)/libXext.so$(SOXEXTREV)
     EXTENSIONLIB =  -lXext

         DEPXILIB =  $(USRLIBDIR)/libXi.so$(SOXINPUTREV)
            XILIB =  -lXi

      DEPXNMBXLIB =  $(USRLIBDIR)/libXnmbx.so$(SOXNMBXREV)
         XNMBXLIB =  -lXnmbx

        SOXLIBREV = .1
          SOXTREV =
         SOXAWREV =
        SOOLDXREV =
         SOXMUREV =
        SOXEXTREV =
      SOXINPUTREV =
       SOXTESTREV =
       SOXTRAPREV =
         SOPEXREV = SharedPexRev
       SOXNMBXREV =

      DEPXAUTHLIB =  $(USRLIBDIR)/libXau.a
         XAUTHLIB = 			  -lXau
      DEPXDMCPLIB =  $(USRLIBDIR)/libXdmcp.a
         XDMCPLIB = 			  -lXdmcp

       DEPOLDXLIB =  $(USRLIBDIR)/liboldX.a
          OLDXLIB = 			  -loldX

     DEPXTESTLIB =  $(USRLIBDIR)/libXtst.a
        XTESTLIB = 			  -lXtst

          DEPPEXLIB =  $(USRLIBDIR)/libPEX5.a
             PEXLIB = 			  -lPEX5

        DEPPHIGSLIB =  $(USRLIBDIR)/libphigs.a
           PHIGSLIB = 			  -lphigs

       DEPXBSDLIB =  $(USRLIBDIR)/libXbsd.a
          XBSDLIB = 			  -lXbsd

 LINTEXTENSIONLIB =  $(LINTLIBDIR)/llib-lXext.ln
         LINTXLIB =  $(LINTLIBDIR)/llib-lX11.ln
          LINTXMU =  $(LINTLIBDIR)/llib-lXmu.ln
        LINTXTOOL =  $(LINTLIBDIR)/llib-lXt.ln
          LINTXAW =  $(LINTLIBDIR)/llib-lXaw.ln
           LINTXI =  $(LINTLIBDIR)/llib-lXi.ln
          LINTPEX =  $(LINTLIBDIR)/llib-lPEX5.ln
        LINTPHIGS =  $(LINTLIBDIR)/llib-lphigs.ln
        LINTXNMBX =  $(LINTLIBDIR)/llib-lXnmbx.ln

          DEPLIBS = $(DEPXAWLIB) $(DEPXMULIB) $(DEPXTOOLLIB) $(DEPXLIB)

         DEPLIBS1 = $(DEPLIBS)
         DEPLIBS2 = $(DEPLIBS)
         DEPLIBS3 = $(DEPLIBS)

# -------------------------------------------------------------------------
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $XConsortium: Imake.rules,v 1.129 92/05/29 17:01:19 rws Exp $

# -------------------------------------------------------------------------
# start of Imakefile

SRCS = \
accanti.c        clip.c           list.c           scenebamb.c \
accnot.c         colormat.c       list2.c          sceneflat.c \
accpersp.c       cone.c           maplight.c       select.c \
accum.c          cube.c           material.c       simple.c \
aim.c            curve.c          mipmap.c         smooth.c \
alpha.c          depthcue.c       model.c          sphere.c \
alpha3D.c        disk.c           movelight.c      stencil.c \
anti.c           dof.c            nurbs.c          stroke.c \
antiindex.c      dofnot.c         pickdepth.c      surface.c \
antipindex.c     double.c         pickline.c       tea.c \
antipoint.c      drawf.c          picksquare.c     teaambient.c \
antipoly.c       feedback.c       plane.c          teapots.c \
bezcurve.c       fog.c            planet.c         texgen.c \
bezmesh.c        fogindex.c       planetup.c       texturesurf.c \
bezsurf.c        font.c           polys.c          trim.c \
checker.c        light.c          robot.c          xfont.c \
checker2.c       linelist.c       sccolorlight.c \
chess.c          lines.c          scene.c

PROGRAMS = \
accanti        clip           list           scenebamb \
accnot         colormat       list2          sceneflat \
accpersp       cone           maplight       select \
accum          cube           material       simple \
aim            curve          mipmap         smooth \
alpha          depthcue       model          sphere \
alpha3D        disk           movelight      stencil \
anti           dof            nurbs          stroke \
antiindex      dofnot         pickdepth      surface \
antipindex     double         pickline       tea \
antipoint      drawf          picksquare     teaambient \
antipoly       feedback       plane          teapots \
bezcurve       fog            planet         texgen \
bezmesh        fogindex       planetup       texturesurf \
bezsurf        font           polys          trim \
checker        light          robot          xfont \
checker2       linelist       sccolorlight \
chess          lines          scene

DEP_LIBRARIES = ./libaux/libaux.a

LOCAL_LIBRARIES = $(DEP_LIBRARIES) $(XLIB) -lGL -lGLU

INCLUDES = -I$(TOP) -I./libaux -I$(INCLUDEDIR)/GL

all:: $(PROGRAMS)

accanti: accanti.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ accanti.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) accanti

accnot: accnot.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ accnot.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) accnot

accpersp: accpersp.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ accpersp.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) accpersp

accum: accum.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ accum.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) accum

aim: aim.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ aim.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) aim

alpha: alpha.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ alpha.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) alpha

alpha3D: alpha3D.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ alpha3D.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) alpha3D

anti: anti.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ anti.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) anti

antiindex: antiindex.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ antiindex.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) antiindex

antipindex: antipindex.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ antipindex.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) antipindex

antipoint: antipoint.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ antipoint.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) antipoint

antipoly: antipoly.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ antipoly.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) antipoly

bezcurve: bezcurve.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ bezcurve.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) bezcurve

bezmesh: bezmesh.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ bezmesh.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) bezmesh

bezsurf: bezsurf.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ bezsurf.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) bezsurf

checker: checker.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ checker.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) checker

checker2: checker2.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ checker2.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) checker2

chess: chess.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ chess.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) chess

clip: clip.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ clip.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) clip

colormat: colormat.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ colormat.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) colormat

cone: cone.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ cone.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) cone

cube: cube.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ cube.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) cube

curve: curve.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ curve.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) curve

depthcue: depthcue.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ depthcue.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) depthcue

disk: disk.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ disk.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) disk

dof: dof.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ dof.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) dof

dofnot: dofnot.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ dofnot.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) dofnot

double: double.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ double.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) double

drawf: drawf.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ drawf.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) drawf

feedback: feedback.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ feedback.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) feedback

fog: fog.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ fog.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) fog

fogindex: fogindex.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ fogindex.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) fogindex

font: font.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ font.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) font

light: light.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ light.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) light

linelist: linelist.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ linelist.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) linelist

lines: lines.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ lines.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) lines

list: list.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ list.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) list

list2: list2.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ list2.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) list2

maplight: maplight.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ maplight.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) maplight

material: material.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ material.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) material

mipmap: mipmap.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ mipmap.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) mipmap

model: model.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ model.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) model

movelight: movelight.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ movelight.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) movelight

nurbs: nurbs.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ nurbs.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) nurbs

pickdepth: pickdepth.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ pickdepth.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) pickdepth

pickline: pickline.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ pickline.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) pickline

picksquare: picksquare.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ picksquare.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) picksquare

plane: plane.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ plane.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) plane

planet: planet.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ planet.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) planet

planetup: planetup.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ planetup.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) planetup

polys: polys.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ polys.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) polys

robot: robot.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ robot.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) robot

sccolorlight: sccolorlight.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ sccolorlight.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) sccolorlight

scene: scene.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ scene.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) scene

scenebamb: scenebamb.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ scenebamb.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) scenebamb

sceneflat: sceneflat.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ sceneflat.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) sceneflat

select: select.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ select.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) select

simple: simple.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ simple.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) simple

smooth: smooth.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ smooth.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) smooth

sphere: sphere.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ sphere.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) sphere

stencil: stencil.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ stencil.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) stencil

stroke: stroke.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ stroke.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) stroke

surface: surface.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ surface.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) surface

tea: tea.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ tea.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) tea

teaambient: teaambient.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ teaambient.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) teaambient

teapots: teapots.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ teapots.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) teapots

texgen: texgen.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ texgen.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) texgen

texturesurf: texturesurf.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ texturesurf.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) texturesurf

trim: trim.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ trim.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) trim

xfont: xfont.o $(DEP_LIBRARIES)
	 $(RM) $@
	$(CC) -o $@ xfont.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) -lm $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) xfont

depend::
	$(DEPEND) $(DEPENDFLAGS) -s "# DO NOT DELETE" -- $(ALLDEFINES) $(DEPEND_DEFINES) -- $(SRCS)

clean::
	$(RM_CMD) "#"*

# -------------------------------------------------------------------------
# common rules for all Makefiles - do not edit

emptyrule::

clean::
	$(RM_CMD) "#"*

Makefile::
	-@if [ -f Makefile ]; then set -x; \
		$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
	else exit 0; fi
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

# -------------------------------------------------------------------------
# empty rules for directories that do not have SUBDIRS - do not edit

install::
	@echo "install in $(CURRENT_DIR) done"

install.man::
	@echo "install.man in $(CURRENT_DIR) done"

Makefiles::

includes::

# -------------------------------------------------------------------------
# dependencies generated by makedepend

